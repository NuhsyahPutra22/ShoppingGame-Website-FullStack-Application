//name: Muhammad Nuhsyah Putra Bin Ramlee
//adminNumber:2045302
//class:DIT/FT/1B02
var jwt = require('jsonwebtoken');
const db = require('./databaseConfig');
var config = require('../config.js');
var user = {
    retrieveUser: function (callback) {
        var dbConn = db.getConnection();
        dbConn.connect(function (err) {
            if (err) {//database connection gt issue!
                console.log(err);
                callback(err, null);
            } else {
                const findAllUsersQuery = "SELECT * FROM user;";
                dbConn.query(findAllUsersQuery, (error, results) => {
                    dbConn.end();
                    if (error) {
                        callback(error, null);
                    } else {
                        callback(null, results);
                    }
                });
            }
        });
    },

    addUser: function (username, email, type, profile_pic_url, callback) { //userid is autogenerated
        var conn = db.getConnection();
        conn.connect(function (err) {
            if (err) {
                console.log(err);
                return callback(err, null);
            } else {
                console.log("Connected!");
                var sql = 'Insert into user(username, email, type,profile_pic_url) values(?,?,?,?)';
                conn.query(sql, [username, email, type, profile_pic_url], function (err, result) {
                    if (err) {
                        console.log(err);
                        return callback(err, null);
                    }
                    conn.end();
                    if (err) {
                        console.log(err);
                        return callback(err, null);
                    } else {
                        console.log(result);
                        return callback(null, result);
                    }
                });
            }
        });
    },

    getUserid: function (userid, callback) {
        var conn = db.getConnection();
        conn.connect(function (err) {
            if (err) {
                console.log(err);
                return callback(err, null);
            } else {
                console.log("Connected!");
                var sql = 'SELECT userid, username, email, type,profile_pic_url FROM user WHERE userid = ?';

                conn.query(sql, [userid], function (err, result) {
                    conn.end();
                    if (err) {
                        console.log(err);
                        return callback(err, null);
                    } else {
                        return callback(null, result);
                    }
                });
            }
        });
    },
    loginUser: function (email, password, callback) {

        var conn = db.getConnection();

        conn.connect(function (err) {
            if (err) {
                console.log(err);
                return callback(err, null);
            }
            else {
                console.log("Connected!");

                var sql = 'select * from user where ((email=? or username=?) and password=?)';

                conn.query(sql, [email, email, password], function (err, result) {
                    conn.end();

                    if (err) {
                        console.log("Err: " + err);
                        return callback(err, null, null);
                    } else {
                        var token = "";
                        var i;
                        if (result.length == 1) {

                            token = jwt.sign({ id: result[0].userid, type: result[0].type }, config.key, {
                                expiresIn: 86400 //expires in 24 hrs
                            });
                            console.log("@@token " + token);
                            return callback(null, token, result);


                        } else {
                            var err2 = new Error("UserID/Password does not match.");
                            err2.statusCode = 500;
                            return callback(err2, null, null);
                        }
                    }  //else
                });
            }
        });
    },
    getUsers: function (userid, callback) {
        var conn = db.getConnection();
        conn.connect(function (err) {
            if (err) {
                console.log(err);
                return callback(err, null);
            } else {
                console.log("Connected!");
                // var sql = 'SELECT * FROM user WHERE userid = ?';
                var sql = 'SELECT * FROM user WHERE userid = ?'; //note only 1 question mark ?

                conn.query(sql, [userid], function (err, result) { //note only 1 variable inside array []
                    conn.end();
                    if (err) {
                        console.log(err);
                        return callback(err, null);
                    } else {
                        return callback(null, result);
                    }
                });
            }
        });
    },
    findAll: function (callback) {
        var dbConn = db.getConnection();
        dbConn.connect(function (err) {
            if (err) {//database connection gt issue!
                console.log(err);
                callback(err, null);
            } else {
                const findAllUsersQuery = "SELECT * FROM user;";
                dbConn.query(findAllUsersQuery, (error, results) => {
                    dbConn.end();
                    if (error) {
                        callback(error, null);
                    } else {
                        callback(null, results);
                    }
                });
            }
        });
    },
    insert: function (user, callback) {
        var dbConn = db.getConnection();
        dbConn.connect(function (err) {
            if (err) {//database connection gt issue!
                console.log(err);
                callback(err, null);
            } else {
                const insertUserQuery =
                    `
                    INSERT INTO user (username, email, type, profile_pic_url)
                    VALUES (?, ?, ?, ?);
                    `;
                dbConn.query(
                    insertUserQuery,
                    [user.username, user.email, user.type, user.profile_pic_url],
                    (error, results) => {
                        if (error) {
                            callback(error, null);
                        } else {
                            const retrieveInsertUserQuery =
                                `
                    SELECT * FROM user WHERE userid = ?;
                    `;
                            dbConn.query(
                                retrieveInsertUserQuery,
                                [results.insertId],
                                (error, results) => {

                                    dbConn.end();
                                    if (error) {
                                        callback(error, null);
                                    } else {
                                        callback(null, results[0]);
                                    }
                                });
                        }
                    });
            }
        });
    },
    delete: function (userID, callback) {
        var dbConn = db.getConnection();
        dbConn.connect(function (err) {
            if (err) {//database connection gt issue!
                console.log(err);
                callback(err, null);
            } else {
                const deleteUserQuery = "DELETE FROM user WHERE id = ?;";
                dbConn.query(deleteUserQuery, [userID], (error, results) => {
                    dbConn.end();
                    if (error) {
                        callback(error, null);
                    } else {
                        callback(null, results);
                    }
                });
            }
        });
    },
    updateUser: function (username, email, type, userid, callback) {

        var conn = db.getConnection();

        conn.connect(function (err) {
            if (err) {
                console.log(err);
                return callback(err, err, null);
            } else {
                console.log("Connected!");

                //var sql = "UPDATE user SET username=?, type=? WHERE email=?";
                var sql = "UPDATE user SET username=?,type=?,email=? WHERE userid=?";
                conn.query(sql, [username, type, email, userid], function (err, err, result) {
                    conn.end();

                    if (err) {
                        console.log(err);
                        return callback(err, err, null);
                    } else {
                        console.log("No. of records updated successfully: " + result.affectedRows);
                        return callback(null, result.affectedRows);
                    }
                })
            }
        })
    },
    verify: function (username, password, callback) {
        console.log(username, password);
        //Fetch the correct user record fromt the user table first,
        //Dont use password = ? inside the SQL. No point.
        const query = "SELECT * FROM userinfo WHERE userName = ? LIMIT 1";

        db.query(query, [username], (error, results) => {
            if (error) {
                callback(error, null);
                return;
            }
            if (results.length === 0) {
                callback(null, null);
                return;
            }
            const user = results[0];
            console.log(results[0]);
            //After the result is fetched from the database,
            //use brypt to compare the given passeord with the record's
            //encrypt password.
            bcrypt.compare(password, user.password, (error, compareResult) => {
                if (error) {
                    callback(error, null);
                    return;
                }
                if (!compareResult) {
                    callback(null, null);
                    return;
                }
                //The line below can only execute of the above
                //2 condition dont give any problems.
                callback(null, user);
            });
        });
    }
};




module.exports = user;
